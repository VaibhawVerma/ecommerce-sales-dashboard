# -*- coding: utf-8 -*-
"""online_retail.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PNxkFnmKXhuUOs3a-Z-ym2dk-sSNE5lW
"""

import pandas as pd

try:
    df = pd.read_csv('online_retail_II.csv', encoding='latin1')
    print("Successfully loaded the CSV file.")
except FileNotFoundError:
    print("Error: The CSV file was not found.")
    print("Please make sure the file is in the same directory as this script and the filename matches.")
    # Exit the script if the file can't be loaded.
    exit()
except Exception as e:
    print(f"An error occurred while loading the file: {e}")
    exit()

print("\n--- First 5 rows of the dataset: ---")
print(df.head())

print("\n--- Dataframe Info: ---")
df.info()

print("\n--- Statistical Summary: ---")
print(df.describe())

# --- 3. DATA CLEANING ---
if 'CustomerID' in df.columns:
    df.rename(columns={'CustomerID': 'Customer ID'}, inplace=True)

# Remove rows where CustomerID is missing.
df.dropna(subset=['Customer ID'], inplace=True)
print(f"\nShape of data after dropping rows with missing Customer ID: {df.shape}")

# Remove duplicate rows
df.drop_duplicates(inplace=True)
print(f"Shape of data after dropping duplicates: {df.shape}")

df['Customer ID'] = df['Customer ID'].astype('int64').astype('str')

df = df[df['Quantity'] > 0]

df = df[df['Price'] > 0]
print(f"Shape of data after removing returns and zero-priced items: {df.shape}")

# --- 4. FEATURE ENGINEERING ---
df['InvoiceDate'] = pd.to_datetime(df['InvoiceDate'])

df['TotalPrice'] = df['Quantity'] * df['Price']

df['Year'] = df['InvoiceDate'].dt.year
df['Month'] = df['InvoiceDate'].dt.month
df['Day'] = df['InvoiceDate'].dt.day
df['Weekday'] = df['InvoiceDate'].dt.day_name()

print("\n--- Data after cleaning and feature engineering (first 5 rows): ---")
print(df.head())

# --- 5. SAVE THE CLEANED DATA ---
try:
    df.to_csv('cleaned_retail_data.csv', index=False)
    print("\nSuccessfully saved the cleaned data to 'cleaned_retail_data.csv'")
except Exception as e:
    print(f"\nError saving the file: {e}")

